<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-03T20:50:28 IST" name="Surefire suite" finished-at="2025-05-03T20:51:26 IST" duration-ms="57626">
    <groups>
    </groups>
    <test started-at="2025-05-03T20:50:28 IST" name="Surefire test" finished-at="2025-05-03T20:51:26 IST" duration-ms="57626">
      <class name="com.pwj.saucedemo.tests.AddToCartTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.AddToCartTest@29176cc1]" started-at="2025-05-03T20:50:38 IST" name="setUp" finished-at="2025-05-03T20:50:39 IST" duration-ms="1360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.AddToCartTest.testAddFirstProductToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddFirstProductToCart()[pri:0, instance:com.pwj.saucedemo.tests.AddToCartTest@29176cc1]" started-at="2025-05-03T20:50:39 IST" name="testAddFirstProductToCart" finished-at="2025-05-03T20:50:39 IST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFirstProductToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.AddToCartTest@29176cc1]" started-at="2025-05-03T20:50:39 IST" name="tearDown" finished-at="2025-05-03T20:50:39 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddFirstProductToCart status=SUCCESS method=AddToCartTest.testAddFirstProductToCart()[pri:0, instance:com.pwj.saucedemo.tests.AddToCartTest@29176cc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.AddToCartTest -->
      <class name="com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest@147ed70f]" started-at="2025-05-03T20:51:21 IST" name="setUp" finished-at="2025-05-03T20:51:22 IST" duration-ms="1216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest.testStandardUserOrderFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testStandardUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest@147ed70f]" started-at="2025-05-03T20:51:22 IST" name="testStandardUserOrderFlow" description="Regression test for standard_user to place a full order successfully" finished-at="2025-05-03T20:51:23 IST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStandardUserOrderFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest@147ed70f]" started-at="2025-05-03T20:51:23 IST" name="tearDown" finished-at="2025-05-03T20:51:23 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStandardUserOrderFlow status=SUCCESS method=StandardUserOrderTest.testStandardUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest@147ed70f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.Orderplaced_tests.StandardUserOrderTest -->
      <class name="com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest@124c278f]" started-at="2025-05-03T20:51:25 IST" name="setUp" finished-at="2025-05-03T20:51:26 IST" duration-ms="1349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest.testInvalidLoginShowsErrorMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidLoginShowsErrorMessage()[pri:0, instance:com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest@124c278f]" started-at="2025-05-03T20:51:26 IST" name="testInvalidLoginShowsErrorMessage" finished-at="2025-05-03T20:51:26 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginShowsErrorMessage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest@124c278f]" started-at="2025-05-03T20:51:26 IST" name="tearDown" finished-at="2025-05-03T20:51:26 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginShowsErrorMessage status=SUCCESS method=SauceDemoInvalidLoginTest.testInvalidLoginShowsErrorMessage()[pri:0, instance:com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.SauceDemoInvalidLoginTest -->
      <class name="com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest@61dd025]" started-at="2025-05-03T20:51:23 IST" name="setUp" finished-at="2025-05-03T20:51:24 IST" duration-ms="1349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest.testProblemUserOrderFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProblemUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest@61dd025]" started-at="2025-05-03T20:51:24 IST" name="testProblemUserOrderFlow" description="Regression test for problem_user to complete an order successfully" finished-at="2025-05-03T20:51:24 IST" duration-ms="261" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Summary should be visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Summary should be visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest.testProblemUserOrderFlow(ProblemUserOrderTest.java:49)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProblemUserOrderFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest@61dd025]" started-at="2025-05-03T20:51:24 IST" name="tearDown" finished-at="2025-05-03T20:51:25 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProblemUserOrderFlow status=FAILURE method=ProblemUserOrderTest.testProblemUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest@61dd025] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.Orderplaced_tests.ProblemUserOrderTest -->
      <class name="com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest@2f177a4b]" started-at="2025-05-03T20:50:39 IST" name="setUp" finished-at="2025-05-03T20:50:41 IST" duration-ms="1338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest.testPerformanceGlitchUserOrderFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPerformanceGlitchUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest@2f177a4b]" started-at="2025-05-03T20:50:41 IST" name="testPerformanceGlitchUserOrderFlow" description="Regression test for performance_glitch_user with glitch-handling and full order validation" finished-at="2025-05-03T20:51:19 IST" duration-ms="38089" status="FAIL">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Error {
  message='Timeout 30000ms exceeded.
  name='TimeoutError
  stack='TimeoutError: Timeout 30000ms exceeded.
    at ProgressController.run (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/progress.js:75:26)
    at Frame.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/frames.js:1022:23)
    at FrameDispatcher.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/frameDispatcher.js:157:30)
    at FrameDispatcher._handleCommand (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:96:40)
    at DispatcherConnection.dispatch (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:366:39)
}
Call log:
-   - waiting for locator("#login-button")
]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Error {
  message='Timeout 30000ms exceeded.
  name='TimeoutError
  stack='TimeoutError: Timeout 30000ms exceeded.
    at ProgressController.run (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/progress.js:75:26)
    at Frame.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/frames.js:1022:23)
    at FrameDispatcher.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/frameDispatcher.js:157:30)
    at FrameDispatcher._handleCommand (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:96:40)
    at DispatcherConnection.dispatch (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:366:39)
}
Call log:
-   - waiting for locator("#login-button")

at com.microsoft.playwright.impl.WaitableResult.get(WaitableResult.java:52)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:132)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:130)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:118)
at com.microsoft.playwright.impl.FrameImpl.clickImpl(FrameImpl.java:252)
at com.microsoft.playwright.impl.FrameImpl.lambda$click$8(FrameImpl.java:243)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:97)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.FrameImpl.click(FrameImpl.java:243)
at com.microsoft.playwright.impl.LocatorImpl.click(LocatorImpl.java:174)
at com.microsoft.playwright.Locator.click(Locator.java:2508)
at com.pwj.saucedemo.pages.SauceDemoHomePage.clickLogin(SauceDemoHomePage.java:55)
at com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest.testPerformanceGlitchUserOrderFlow(PerformanceGlitchUserOrderTest.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: com.microsoft.playwright.TimeoutError: Error {
  message='Timeout 30000ms exceeded.
  name='TimeoutError
  stack='TimeoutError: Timeout 30000ms exceeded.
    at ProgressController.run (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/progress.js:75:26)
    at Frame.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/frames.js:1022:23)
    at FrameDispatcher.click (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/frameDispatcher.js:157:30)
    at FrameDispatcher._handleCommand (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:96:40)
    at DispatcherConnection.dispatch (/private/var/folders/r5/m0v18bws6nq20j1xkhvy8yh80000gn/T/playwright-java-12790374809849998463/package/lib/server/dispatchers/dispatcher.js:366:39)
}
Call log:
-   - waiting for locator("#login-button")

at com.microsoft.playwright.impl.Connection.dispatch(Connection.java:254)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:211)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:130)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPerformanceGlitchUserOrderFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest@2f177a4b]" started-at="2025-05-03T20:51:19 IST" name="tearDown" finished-at="2025-05-03T20:51:19 IST" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPerformanceGlitchUserOrderFlow status=FAILURE method=PerformanceGlitchUserOrderTest.testPerformanceGlitchUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest@2f177a4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.Orderplaced_tests.PerformanceGlitchUserOrderTest -->
      <class name="com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest@4278a03f]" started-at="2025-05-03T20:51:19 IST" name="setUp" finished-at="2025-05-03T20:51:20 IST" duration-ms="1314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest.testVisualUserOrderFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVisualUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest@4278a03f]" started-at="2025-05-03T20:51:20 IST" name="testVisualUserOrderFlow" description="Regression test for visual_user to complete an order successfully" finished-at="2025-05-03T20:51:21 IST" duration-ms="436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisualUserOrderFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest@4278a03f]" started-at="2025-05-03T20:51:21 IST" name="tearDown" finished-at="2025-05-03T20:51:21 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVisualUserOrderFlow status=SUCCESS method=VisualUserOrderTest.testVisualUserOrderFlow()[pri:0, instance:com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest@4278a03f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.Orderplaced_tests.VisualUserOrderTest -->
      <class name="com.pwj.saucedemo.tests.CheckoutFlowTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:28 IST" name="setUp" finished-at="2025-05-03T20:50:32 IST" duration-ms="3703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.CheckoutFlowTest.testCancelFromOverviewStep()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCancelFromOverviewStep()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:32 IST" name="testCancelFromOverviewStep" description="Cancel from overview page should return to inventory" finished-at="2025-05-03T20:50:33 IST" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancelFromOverviewStep -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:33 IST" name="tearDown" finished-at="2025-05-03T20:50:33 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCancelFromOverviewStep status=SUCCESS method=CheckoutFlowTest.testCancelFromOverviewStep()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:33 IST" name="setUp" finished-at="2025-05-03T20:50:34 IST" duration-ms="1396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.CheckoutFlowTest.testCancelFromStepOne()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCancelFromStepOne()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:34 IST" name="testCancelFromStepOne" description="Cancel from Step One should return to cart page" finished-at="2025-05-03T20:50:35 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancelFromStepOne -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:35 IST" name="tearDown" finished-at="2025-05-03T20:50:35 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCancelFromStepOne status=SUCCESS method=CheckoutFlowTest.testCancelFromStepOne()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:35 IST" name="setUp" finished-at="2025-05-03T20:50:37 IST" duration-ms="2363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.pwj.saucedemo.tests.CheckoutFlowTest.testFullCheckoutFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFullCheckoutFlow()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:37 IST" name="testFullCheckoutFlow" description="Complete checkout from cart to order confirmation" finished-at="2025-05-03T20:50:38 IST" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullCheckoutFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18]" started-at="2025-05-03T20:50:38 IST" name="tearDown" finished-at="2025-05-03T20:50:38 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullCheckoutFlow status=SUCCESS method=CheckoutFlowTest.testFullCheckoutFlow()[pri:0, instance:com.pwj.saucedemo.tests.CheckoutFlowTest@8909f18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pwj.saucedemo.tests.CheckoutFlowTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
